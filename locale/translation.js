// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('Bits');
gettext('Bus');
gettext('bit-0');
gettext('Constant bit 0');
gettext('bit-1');
gettext('Constant bit 1');
gettext('generic');
gettext('1-bit generic constant (0/1)');
gettext('Bus-02');
gettext('Bus-03');
gettext('Bus-04');
gettext('Bus-05');
gettext('Bus-06');
gettext('Bus-07');
gettext('Bus-08');
gettext('Bus-09');
gettext('Bus-10');
gettext('Bus-11');
gettext('Bus-12');
gettext('Bus-13');
gettext('Bus-14');
gettext('Bus-15');
gettext('Bus-16');
gettext('Bus-17');
gettext('Bus-18');
gettext('Bus-19');
gettext('Bus-20');
gettext('Bus-21');
gettext('Bus-22');
gettext('Bus-23');
gettext('Bus-24');
gettext('Bus-25');
gettext('Bus-26');
gettext('Bus-27');
gettext('Bus-28');
gettext('Bus-29');
gettext('Bus-30');
gettext('Bus-31');
gettext('Bus-32');
gettext('Bus-64');
gettext('generic');
gettext('Generic: 2-bits generic constant (0,1,2,3)');
gettext('k-1');
gettext('Generic: 2-bits k-1 constant (Input values: 1,2,3,4). It returns the value input by the user minus 1. Outputs: 0,1,2,3');
gettext('Output: 0,1,2,3');
gettext('Inputs: 1,2,3,4');
gettext('value-0');
gettext('2bits constant value: 0');
gettext('value-1');
gettext('2bits constant value: 1');
gettext('value-2');
gettext('2bits constant value: 2');
gettext('value-3');
gettext('2bits constant value: 3');
gettext('generic');
gettext('Generic: 3-bits generic constant (0-7)');
gettext('k-1');
gettext('Generic: 3-bits k-1 constant (Input values: 1,2,...,8). It returns the value input by the user minus 1. Outputs: 0,1,2,...,7');
gettext('Output: 0,1,2,...,7');
gettext('Inputs: 1,2,...,8');
gettext('value-0');
gettext('3bits constant value: 0');
gettext('value-1');
gettext('3bits constant value: 1');
gettext('value-2');
gettext('3bits constant value: 2');
gettext('value-4');
gettext('3bits constant value: 4');
gettext('value-7');
gettext('3bits constant value: 7');
gettext('generic');
gettext('Generic: 4-bits generic constant (0-15)');
gettext('k-1');
gettext('Generic: 4-bits k-1 constant (Input values: 1,2,...,16). It returns the value input by the user minus 1. Outputs: 0,1,2,...,15');
gettext('Output: 0,1,2,...,15');
gettext('Inputs: 1,2,...,16');
gettext('value-0');
gettext('4bits constant value: 0');
gettext('value-0xF');
gettext('4bits constant value: 15 (0xF in hexadecimal)');
gettext('value-1');
gettext('4bits constant value: 1');
gettext('value-2');
gettext('4bits constant value: 2');
gettext('value-4');
gettext('4bits constant value: 4');
gettext('value-8');
gettext('4bits constant value: 8');
gettext('generic');
gettext('Generic: 5-bits generic constant (0-31)');
gettext('k-1');
gettext('Generic: 5-bits k-1 constant (Input values: 1,2,...,32). It returns the value input by the user minus 1. Outputs: 0,1,2,...,31');
gettext('Output: 0,1,2,...,31');
gettext('Inputs: 1,2,...,32');
gettext('value-0');
gettext('5bits constant value: 0');
gettext('generic');
gettext('Generic: 6-bits generic constant (0-63)');
gettext('k-1');
gettext('Generic: 6-bits k-1 constant (Input values: 1,2,...,64). It returns the value input by the user minus 1. Outputs: 0,1,2,...,63');
gettext('Output: 0,1,2,...,63');
gettext('Inputs: 1,2,...,64');
gettext('value-0');
gettext('6bits constant value: 0');
gettext('generic');
gettext('Generic: 7-bits generic constant (0-127)');
gettext('k-1');
gettext('Generic: 7-bits k-1 constant (Input values: 1,2,...,128). It returns the value input by the user minus 1. Outputs: 0,1,2,...,127');
gettext('Output: 0,1,2,...,127');
gettext('Inputs: 1,2,...,128');
gettext('value-0');
gettext('7bits constant value: 0');
gettext('ASCII-nl');
gettext('8bits ASCII new line');
gettext('Generic: 8-bits generic constant (0-255)');
gettext('Ascii-A');
gettext('8bits ASCII Letter A');
gettext('Ascii-Asterisk');
gettext('8bits ASCII asterisk symbol *');
gettext('generic');
gettext('k-1');
gettext('Generic: 8-bits k-1 constant (Input values: 1,2,...,256). It returns the value input by the user minus 1. Outputs: 0,1,2,...,255');
gettext('Output: 0,1,2,...,255');
gettext('Inputs: 1,2,...,256');
gettext('value-0');
gettext('8bits constant value: 0');
gettext('k');
gettext('Generic: 9-bits generic constant');
gettext('value-0');
gettext('9bits constant value: 0');
gettext('k');
gettext('value-0');
gettext('10bits constant value: 0');
gettext('k');
gettext('Generic: 11-bits generic constant');
gettext('value-0');
gettext('11bits constant value: 0');
gettext('generic');
gettext('Generic: 12-bits generic constant (0-4095)');
gettext('k-1');
gettext('Generic: 12-bits k-1 constant (Input values: 1,2,...,4096). It returns the value input by the user minus 1. Outputs: 0,1,2,...,4095');
gettext('Output: 0,1,2,...,4095');
gettext('Inputs: 1,2,...,4096');
gettext('value-0');
gettext('12bits constant value: 0');
gettext('generic');
gettext('Generic: 13-bits generic constant');
gettext('value-0');
gettext('13bits constant value: 0');
gettext('k-1');
gettext('Generic: 14-bits k-1 constant (Input values: 1,2,...,). It returns the value input by the user minus 1. Outputs: 0,1,2,...,4095');
gettext('Inputs: 1,2,...');
gettext('k');
gettext('Generic: 14-bits generic constant');
gettext('value-0');
gettext('14bits constant value: 0');
gettext('k');
gettext('Generic: 15-bits generic constant');
gettext('value-0');
gettext('15bits constant value: 0');
gettext('k-1');
gettext('Generic: 16-bits k-1 constant (Input values: 1,2,...,h10000). It returns the value input by the user minus 1. Outputs: 0,1,2,...,FFFF');
gettext('Output: 0,1,2,...,hffff');
gettext('Inputs: 1,2,...,h10000');
gettext('k');
gettext('Generic: 16-bits generic constant');
gettext('value-0');
gettext('16bits constant value: 0');
gettext('k');
gettext('Generic: 17-bits generic constant');
gettext('k');
gettext('Generic: 18-bits generic constant');
gettext('k');
gettext('Generic: 19-bits generic constant');
gettext('value-0');
gettext('19bits constant value: 0');
gettext('k-1');
gettext('Generic: 20-bits k-1 constant (Input values: 1,2,...,h100000). It returns the value input by the user minus 1. Outputs: 0,1,2,...,FFFFF');
gettext('Output: 0,1,2,...,hfffff');
gettext('Inputs: 1,2,...,h100000');
gettext('k');
gettext('Generic: 20-bits generic constant');
gettext('value-0');
gettext('20bits constant value: 0');
gettext('k');
gettext('Generic: 21-bits generic constant');
gettext('k');
gettext('Generic: 22-bits generic constant');
gettext('k');
gettext('Generic: 23-bits generic constant');
gettext('value-0');
gettext('23bits constant value: 0');
gettext('k-1');
gettext('Generic: 24-bits k-1 constant (Input values: 1,2,...,h1000000). It returns the value input by the user minus 1. Outputs: 0,1,2,...,FFFFFF');
gettext('Output: 0,1,2,...,hffffff');
gettext('Inputs: 1,2,...,h1000000');
gettext('k');
gettext('Generic: 24-bits generic constant');
gettext('value-0');
gettext('24bits constant value: 0');
gettext('k');
gettext('Generic: 25-bits generic constant');
gettext('k');
gettext('Generic: 26-bits generic constant');
gettext('k');
gettext('Generic: 27-bits generic constant');
gettext('value-0');
gettext('27bits constant value: 0');
gettext('k-1');
gettext('Generic: 28-bits k-1 constant (Input values: 1,2,...,h10000000). It returns the value input by the user minus 1. Outputs: 0,1,2,...,FFFFFFF');
gettext('k');
gettext('Generic: 28-bits generic constant');
gettext('value-0');
gettext('28bits constant value: 0');
gettext('k');
gettext('Generic: 29-bits generic constant');
gettext('k');
gettext('Generic: 30-bits generic constant');
gettext('k');
gettext('Generic: 31-bits generic constant');
gettext('value-0');
gettext('31bits constant value: 0');
gettext('k-1');
gettext('Generic: 32-bits k-1 constant (Input values: 1,2,...,h100000000). It returns the value input by the user minus 1. Outputs: 0,1,2,...,FFFFFFFF');
gettext('k');
gettext('Generic: 32-bits generic constant');
gettext('value-0');
gettext('32bits constant value: 0');
gettext('k');
gettext('Generic: 64-bits generic constant');
gettext('01-Turn-on-LEDs');
gettext('02-Generic-constants');
gettext('00-Index');
gettext('# INDEX: IceK Collection');
gettext('bit 0');
gettext('## Bits');
gettext('bit 1');
gettext('## Bus');
gettext('### 1-bit constants');
gettext('Generic constant');
gettext('### 2-bits constants');
gettext('### 3-bits constants');
gettext('### 4-bits constants');
gettext('### 5-bits constants');
gettext('### 6-bits constants');
gettext('### 7-bits constants');
gettext('### 8-bits constants');
gettext('Ascii 'A'');
gettext('Ascii '*'');
gettext('### 12-bits constants');
gettext('### 16-bits constants');
gettext('### 20-bits constants');
gettext('### 24-bits constants');
gettext('### 28-bits constants');
gettext('### 32-bits constants');
gettext('### 11-bits constants');
gettext('### 9-bits constants');
gettext('### 10-bits constants');
gettext('### 15-bits constants');
gettext('### 19-bits constants');
gettext('### 23-bits constants');
gettext('### 27-bits constants');
gettext('### 31-bits constants');
gettext('### 22-bits constants');
gettext('### 17-bits constants');
gettext('### 29-bits constants');
gettext('### 64-bits constants');
gettext('### 13-bits constants');
gettext('### 14-bits constants');
gettext('### 18-bits constants');
gettext('### 21-bits constants');
gettext('### 25-bits constants');
gettext('### 26-bits constants');
gettext('### 30-bits constants');
gettext('Alhambra-II');
gettext('Fomu');
gettext('IceZum-Alhambra');
gettext('MyStorm-BlackIce');
gettext('Nandland-Go-board');
gettext('Radiona-ULX3S-12F');
gettext('iCE40HX8K-Breakout');
gettext('iCE40UP-Breakout');
gettext('iCESugar-1.5');
gettext('iceBreaker');
gettext('iceStick');
gettext('tinyFPGA');
gettext('01-One-LED');
gettext('# Turn on a LED');
gettext('1-bit constant');
gettext('Output pin');
gettext('## Result\n\nThe LED0 is on\n\n(If you are connected to Internet you will see a picture)  \n\n![Alhambra II image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/Alhambra-II/Example-01-01.png)');
gettext('02-Two-LEDs');
gettext('# Turning on two LEDs\n\nThe 2-bit constant 3 (11 in binary) is used to turn on  \ntwo LEDs');
gettext('Output pins');
gettext('2-bit constant value 3  \n(11 in binary)');
gettext('## Result:\n\nThe LEDs 0 and 1 are turned on  \n\n(If you are connected to internet you will see a picture)  \n\n![Alhambra II board picture](https://raw.githubusercontent.com/FPGAwars/iceK/main/wiki/images/Alhambra-II/Example-01-02-2.png)\n\n');
gettext('01-One-LED');
gettext('02-Two-LEDs');
gettext('01-One-LED');
gettext('## Result\n\nThe RGB LED is turned GREEN\n\n(If you are connected to Internet you will see a picture)  \n\n![Fomu image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/Fomu/Example-01-02-2.png)');
gettext('usb pins must be \"0\"');
gettext('usb_dp_pu');
gettext('Green');
gettext('Red');
gettext('Blue');
gettext('RGB LED work with  \nnegative logic:  \n* 0: Turn LED on  \n* 1: Turn LED off  \nThe three components (red, green, blue) act as  \nindependent LEDs');
gettext('The Red and Blue components  \nare turned off');
gettext('02-Two-LEDs');
gettext('# Turn on two LEDs');
gettext('## Result\n\nThe components Green and Red of the RGB LED are turned on, so that  \nthe color displayed is Yellow\n\n(If you are connected to Internet you will see a picture)  \n\n![Fomu image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/Fomu/Example-01-02-2.png)');
gettext('2-bit constant value 0  \n(00 in binary)');
gettext('LEDs R and G work with  \nnegative logic:  \n* 0: Turn LED on  \n* 1: Turn LED off');
gettext('The RGB2 is turned off   \n(No blue color)  \n(negative logic)');
gettext('01-One-LED');
gettext('02-Two-LEDs');
gettext('01-One-LED');
gettext('## Result\n\nThe LED0 is on\n\n(If you are connected to Internet you will see a picture)  \n\n![Icezum Alhambra image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/Icezum-Alhambra/Example-01-01-2.png)  ');
gettext('02-Two-LEDs');
gettext('## Result:\n\nThe LEDs 0 and 1 are turned on  \n\n(If you are connected to internet you will see a picture)  \n\n![Icezum Alhambra picture](https://github.com/FPGAwars/iceK/raw/main/wiki/images/Icezum-Alhambra/Example-01-02-2.png)\n\n');
gettext('01-One-LED');
gettext('02-Two-LEDs');
gettext('01-One-LED');
gettext('## Result\n\nThe LED1 (blue) is on\n\n(If you are connected to Internet you will see a picture)  \n\n![MyStorm blackIce image](https://raw.githubusercontent.com/FPGAwars/iceK/main/wiki/images/MyStorm-Blackice/Example-01-01-2.png)  ');
gettext('Turn off LED2  \n(The FPGA pins are in high impedance state  \nso that not driven LEDs bright a little bit)  ');
gettext('02-Two-LEDs');
gettext('## Result:\n\nThe LEDs 1 (blue) and 2 (green) are turned on  \n\n(If you are connected to internet you will see a picture)  \n\n![Mystorm Blackice](https://github.com/FPGAwars/iceK/raw/main/wiki/images/MyStorm-Blackice/Example-01-02-2.png)\n\n');
gettext('01-One-LED');
gettext('02-Two-LEDs');
gettext('01-One-LED');
gettext('## Result\n\nThe LED D1 (green) is on\n\n(If you are connected to Internet you will see a picture)  \n\n![Nandland-Go-board image](https://raw.githubusercontent.com/FPGAwars/iceK/main/wiki/images/NandLand-Go-Board/Example-01-01-2.png)  ');
gettext('02-Two-LEDs');
gettext('## Result:\n\nThe LEDs D1 and D2 are turned on  \n\n(If you are connected to internet you will see a picture)  \n\n![Nandland Go Board picture](https://raw.githubusercontent.com/FPGAwars/iceK/main/wiki/images/NandLand-Go-Board/Example-01-02-2.png)\n\n');
gettext('01-One-LED');
gettext('02-Two-LEDs');
gettext('01-One-LED');
gettext('## Result\n\nThe LED0 (D0) is on (red)\n\n(If you are connected to Internet you will see a picture)  \n\n![Radiona ULX3S-12F image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/Radiona-ULX3S-12F/Example-01-01-2.png)');
gettext('wifi_gpio0 should be 0 if wifi  \nis not used');
gettext('02-Two-LEDs');
gettext('## Result:\n\nThe LEDs 0 (D0,red) and 1 (D1, orange) are turned on\n\n(If you are connected to Internet you will see a picture)  \n\n![Radiona ULX3S-12F image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/Radiona-ULX3S-12F/Example-01-02-2.png)');
gettext('01-One-LED');
gettext('01-One-LED');
gettext('## Result\n\nThe LED0 (red, D9) is on\n\n(If you are connected to Internet you will see a picture)  \n\n![Lattice ice40HX8K Breakout Board image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/iCE40HX8K-Breakout/Example-01-01-2.png)  ');
gettext('02-Two-LEDs');
gettext('## Result:\n\nThe LEDs 0 (D9) and 1 (D8) are turned on  \n\n(If you are connected to internet you will see a picture)  \n\n![Lattice iCE40-HX8K Breakout board Image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/iCE40HX8K-Breakout/Example-01-02-2.png)\n\n');
gettext('01-One-LED');
gettext('## Result\n\nThe RGB LED is turned RED\n\n(If you are connected to Internet you will see a picture)  \n\n![Lattice ice40UP Breakout Board image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/iCE40UP-Breakout/Example-01-01-2.png)  ');
gettext('The Green and Blue components  \nare turned off');
gettext('02-Two-LEDs');
gettext('## Result\n\nThe components Red and Green of the RGB LED are turned on, so that  \nthe color displayed is Yellow\n\n(If you are connected to Internet you will see a picture)  \n\n![Lattice ice40UP Breakout Board image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/iCE40UP-Breakout/Example-01-02-2.png)  ');
gettext('The LED_B is turned off   \n(No blue color)  \n(negative logitc)');
gettext('01-One-LED');
gettext('## Result\n\nThe RGB LED is turned RED\n\n(If you are connected to Internet you will see a picture)  \n\n![iCESugar 1.5 image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/iCESugar-1.5/Example-01-01-2.png)  ');
gettext('02-Two-LEDs');
gettext('## Result\n\nThe components Red and Blue of the RGB LED are turned on, so that  \nthe color displayed is Magenta\n\n(If you are connected to Internet you will see a picture)  \n\n![iCESugar 1.5 image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/iCESugar-1.5/Example-01-02-2.png)  ');
gettext('The LED_G is turned off   \n(No blue color)  \n(negative logitc)');
gettext('01-One-LED');
gettext('# Turn on the red LED');
gettext('## Result\n\nThe green LED (G) is on\n\n(If you are connected to Internet you will see a picture)  \n\n![icebreakerA image](https://raw.githubusercontent.com/FPGAwars/iceK/main/wiki/images/iceBreaker/Example-01-01-2.png)  ');
gettext('LEDs G and R works with  \nnegative logic:  \n* 0: Turn LED on  \n* 1: Turn LED off');
gettext('02-Two-LEDs');
gettext('# Turning on two LEDs\n\nThe 2-bit constant 0 (00 in binary) is used to turn on  \ntwo LEDs');
gettext('## Result:\n\nThe LEDs G and R are turned on  \n\n(If you are connected to internet you will see a picture)  \n\n![iceBreaker board picture](https://raw.githubusercontent.com/FPGAwars/iceK/main/wiki/images/iceBreaker/Example-01-02-2.png)\n\n');
gettext('01-One-LED');
gettext('## Result\n\nThe LED D1 is on\n\n(If you are connected to Internet you will see a picture)  \n\n![Alhambra II image](https://github.com/FPGAwars/iceK/raw/main/wiki/images/iceStick/Example-01-01-2.png)  ');
gettext('02-Two-LEDs');
gettext('## Result:\n\nThe LEDs D1 and D2 are turned on  \n\n(If you are connected to internet you will see a picture)  \n\n![iceStick board picture](https://github.com/FPGAwars/iceK/raw/main/wiki/images/iceStick/Example-01-02-2.png)\n\n');
gettext('01-One-LED');
gettext('## Result\n\nThe red LED is on (Boot)\n\n(If you are connected to Internet you will see a picture)  \n\n![TinyFPGA image](https://raw.githubusercontent.com/FPGAwars/iceK/main/wiki/images/TinyFPGA/Example-01-01-2.png)  ');
gettext('Alhambra-II');
gettext('01-One-LEDs');
gettext('# 1-bit Generic constant on one LED\n\nThe value of the 1-bit generic constante is used for turning  \non or off the LED');
gettext('Set the value  \nof the k constant (0 / 1)');
gettext('1-bit generic constant');
gettext('02-Two-LEDs');
gettext('# 2-bit Generic constant on two LEDs\n\nThe value of the 2-bit generic constante is used for turning  \non or off two LEDs');
gettext('Set the value  \nof the k constant (0-3)');
gettext('You can write the constants  \nin binary');
gettext('03-Four-LEDs');
gettext('# 4-bit Generic constant on four LEDs\n\nThe value of the 4-bit generic constante is used for turning  \non or off two LEDs');
gettext('Set the value  \nof the k constant (0-15)');
gettext('You can write the  \nconstants in binary');
gettext('..Or in hexa');
gettext('4-bit generic constant');
gettext('01-One-LEDs');
gettext('02-Two-LEDs');
gettext('03-Four-LEDs');
gettext('00-Index');
